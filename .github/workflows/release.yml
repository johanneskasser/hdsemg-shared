name: Build and Publish hdsemg-shared to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tag pushes like v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/hdsemg-shared/
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.x'  # Use the latest 3.10.x version

      - name: Set package Version
        run: echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*

      - name: Gather Release Notes
        shell: 'bash'
        id: notes
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | sed -n "2p")
          echo "Previous tag: $PREV_TAG"
          echo "This tag:    $RAW_TAG"

          echo "<!-- Auto-generated. Do not edit. -->" > release-notes.md
          echo "" >> release-notes.md
          cat README.md >> release-notes.md

          echo "" >> release-notes.md
          echo "## Changelog" >> release-notes.md
          echo "" >> release-notes.md

          git log $PREV_TAG..$RAW_TAG --pretty=format:'- [`%h`](https://github.com/${{ github.repository }}/commit/%H) %s' \
            >> release-notes.md

          echo "notes_file=release-notes.md" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          bodyFile: ${{ steps.notes.outputs.notes_file }}

